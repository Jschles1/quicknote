import * as React from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { api } from '../../utils/api';
import { NextPageWithLayout } from '../_app';
import AppLayout from '@/components/AppLayout';
import TextEditor from '@/components/ui/TextEditor';
import { Separator } from '@/components/ui/Separator';
import { Note } from '@prisma/client';

const NoteDetailPage: NextPageWithLayout<{ notes: Note[] }> = ({ notes }) => {
    const router = useRouter();
    const [param, setParam] = React.useState('');
    console.log({ notes });

    const note = notes.find((note) => note.id === param);

    React.useEffect(() => {
        if (router.isReady) {
            setParam(router.query.noteId as string);
        }
    }, [router.isReady]);

    React.useEffect(() => {
        if (note) {
            const recentlyViewedNotes = localStorage.getItem('recentlyViewedNotes');
            if (recentlyViewedNotes) {
                const parsedRecentlyViewedNotes = JSON.parse(recentlyViewedNotes);
                const alreadyExists = parsedRecentlyViewedNotes.find((note: Note) => note.id === param);
                if (!alreadyExists) {
                    parsedRecentlyViewedNotes.push(note.id);
                    localStorage.setItem('recentlyViewedNotes', JSON.stringify(parsedRecentlyViewedNotes));
                }
            } else {
                localStorage.setItem('recentlyViewedNotes', JSON.stringify([note.id]));
            }
        }
    }, [note]);

    return (
        <>
            <Head>
                <title>QuickNote</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="w-full">
                <h1 className="text-3xl font-extrabold">{note?.name || 'Loading...'}</h1>
                <Separator className="my-3" />
                <TextEditor note={note} mode="edit" height="auto" onChange={() => {}} />
            </div>
        </>
    );
};

export default NoteDetailPage;

NoteDetailPage.getLayout = function getLayout(page) {
    return <AppLayout>{page}</AppLayout>;
};
