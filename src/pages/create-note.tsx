import * as React from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useForm } from 'react-hook-form';
import { api } from '../utils/api';
import { NextPageWithLayout } from './_app';
import AppLayout from '@/components/AppLayout';
import TextEditor from '@/components/ui/TextEditor';
import { Separator } from '@/components/ui/Separator';
import { Input } from '@/components/ui/Input';
import { Button } from '@/components/ui/Button';

const CreateNotePage: NextPageWithLayout = () => {
    const router = useRouter();
    const containerRef = React.useRef<HTMLDivElement>(null);
    const titleRef = React.useRef<HTMLDivElement>(null);
    const inputContainerRef = React.useRef<HTMLDivElement>(null);
    const parentPadding = 16;
    const separatorHeight = 25;
    const initialEditorHeight = 84;
    const [editorHeight, setEditorHeight] = React.useState('auto');
    const {
        register,
        handleSubmit,
        watch,
        formState: { errors },
    } = useForm();
    const onSubmit = (data: any) => console.log(data);

    React.useEffect(() => {
        if (containerRef.current && titleRef.current && inputContainerRef.current) {
            const containerHeight = containerRef.current.getBoundingClientRect().height;
            const titleHeight = titleRef.current.getBoundingClientRect().height;
            const inputContainerHeight = inputContainerRef.current.getBoundingClientRect().height;
            setEditorHeight(
                `${
                    containerHeight -
                    titleHeight -
                    inputContainerHeight -
                    parentPadding -
                    separatorHeight -
                    initialEditorHeight
                }px`
            );
        }
    }, [titleRef, containerRef, inputContainerRef]);

    return (
        <>
            <Head>
                <title>QuickNote - Create Note</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="w-full flex-1" ref={containerRef}>
                <div className="flex items-center justify-between" ref={titleRef}>
                    <h1 className="text-2xl font-extrabold">Create Note:</h1>
                    <Button>Submit</Button>
                </div>

                <form className="flex flex-col" onSubmit={handleSubmit(onSubmit)}>
                    <div ref={inputContainerRef}>
                        <div className="py-2 font-bold">Note Title:</div>
                        <Input className="h-12 py-2 px-3 text-2xl" {...register('name')} placeholder="Note Title" />

                        <div className="py-2 font-bold">Note Category:</div>
                        <Input
                            className="h-12 py-2 px-3 text-2xl"
                            {...register('category')}
                            placeholder="Note Category"
                        />
                    </div>
                    <Separator className="my-3" />
                    <TextEditor mode="create" height={editorHeight} />
                </form>
            </div>
        </>
    );
};

export default CreateNotePage;

CreateNotePage.getLayout = function getLayout(page) {
    return <AppLayout>{page}</AppLayout>;
};
